$malwarePatterns = @{
    "Malware A" = "random_char";
    "Malware B" = "Enchanced_Tabs";
    "Malware C" = "helpCode";
    "Malware D" = [regex]::Escape('assert(load('); # Special handling for characters that need to be escaped
    "Malware E" = '\x50\x65\x72\x66\x6f\x72\x6d\x48\x74\x74\x70\x52\x65\x71\x75\x65\x73\x74'; # Example for handling hex
    "Malware F" = "helperServer";
    "Malware G" = "eGlAnDJByGaVAuyZDaXRzNwsCziWWqkhxierAdUuVyguVhqKsulbKUHiETOTsQTNuVsoCG";
	"Malware new1" = "cipher-panel";
	"Malware new2" = "Enchanced_Tabs";
	"Malware new3" = "helperServer";
	"Malware new4" = "ketamin.cc";
	"Malware new5" = "\x63\x69\x70\x68\x65\x72\x2d\x70\x61\x6e\x65\x6c\x2e\x6d\x65";
	"Malware new6" = "\x6b\x65\x74\x61\x6d\x69\x6e\x2e\x63\x63";
	"Malware new7" = "MpWxwQeLMRJaDFLKmxVIFNeVfzVKaTBiVRvjBoePYciqfpJzxjNPIXedbOtvIbpDxqdoJR";
}

$malwareFound = $false
$scanResults = @()

$excludePaths = @("*\monitor\*", "*\scripting\lua\*") # Deny

foreach ($malware in $malwarePatterns.Keys) {
    $pattern = $malwarePatterns[$malware]
    Write-Host "Scanning for $malware..."
    $files = Get-ChildItem -Recurse -Filter *.lua | Where-Object { $_.FullName -notmatch 'monitor' -and $_.FullName -notmatch 'scripting\\lua' } | Where-Object { Select-String -Path $_.FullName -Pattern $pattern -Quiet }
    
    foreach ($file in $files) {
        $malwareFound = $true
        $scanResults += "[$malware] detected in $($file.FullName)"
    }
}

if ($malwareFound) {
    Write-Host "Malware found! Check the above logged bad resource files. They contain malicious code. Use source comparison to remove it."
    $scanResults | ForEach-Object { Write-Host $_ }
} else {
    Write-Host "No malware found."
}
Read-Host -Prompt "Press enter."
